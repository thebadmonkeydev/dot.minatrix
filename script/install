#!/bin/bash
#
# Run package installation and all topic installers.

set -e

# handle options
SHORT=vqt
LONG=verbose,quiet,topic

# -temporarily store output to be able to check for errors
# -activate advanced mode getopt quoting e.g. via “--options”
# -pass arguments only via   -- "$@"   to separate them correctly
PARSED=$(getopt --options $SHORT --longoptions $LONG --name "$0" -- "$@")
if [[ $? -ne 0 ]]; then
  # e.g. $? == 1
  #  then getopt has complained about wrong arguments to stdout
  exit 2
fi
# use eval with "$PARSED" to properly handle the quoting
eval set -- "$PARSED"

# now enjoy the options in order and nicely split until we see --
while true; do
  case "$1" in
    -v|--verbose)
      export VERBOSE=1
      shift
      ;;
    -q|--quiet)
      export QUIET=1
      shift
      ;;
    -t|--topic)
      export TOPIC_NAME="$3"
      shift
      ;;
    --)
      shift
      break
      ;;
    *)
      echo "Should print usage here"
      exit 3
      ;;
  esac
done

# verbose trumps quiet
if [ "$VERBOSE" = "1" ];then
  if [ "$QUIET" = "1" ];then
    (>&2 echo 'WARN: --verbose(-v) overrides --quiet(-q)')
    unset QUIET
  fi
fi

if [ -z ${DOTFILES+x} ];then
  export DOTFILES=~/dot.minatrix
fi

source $DOTFILES/script/helpers

ensure-sudo

cd "$(dirname $0)"/..

shopt -s extglob

# load default packages
source packages.bash

# Don't install ppas when updating
if [ -z ${DOTUPDATE+x} ];then
  for ppa in "${ppalist[@]}"; do
    inf "Adding custom package source: $ppa"
    eval add-apt-repository $ppa -y $SILENCE_ALL
    success "Added source:$ppa"
  done

  # these were already performed by the update script
  inf 'updating package info'
  eval apt-get update $SILENCE_ALL
  success 'packages updated'

  inf 'Installing core packages'
  eval apt install ${packagelist[@]} $SILENCE_ALL
  success 'installed core packages'
fi

# find the installers and run them iteratively
export AFTERINSTALL='./AFTER_INSTALL_MESSAGE'

if [ "$TOPIC_NAME" = '' ];then
  dir_search=./!(script)/install
else
  if ! [ -d ./$TOPIC_NAME ];then
    die "Can't find topic '$TOPIC_NAME'"
  fi
  dir_search=./$TOPIC_NAME/install
fi

for file in ${dir_search}; do
  if [ -f "$file" ] && [ -x "$file" ];then
    inf "installing $file"
    $file

    if [ $? = 0 ];then
      success "installed $file"
    else
      failure "Error installing $file"
    fi
  fi
done

# Don't bootstrap when updating
if [ -z ${DOTUPDATE+x} ];then
  inf 'bootstrapping dot files'
  $DOTFILES/script/bootstrap

  if [ $? = 0 ];then
    success 'bootstrap complete'
  else
    failure 'Error bootstrapping'
  fi
fi

# source the new bash configuration
source ~/.bashrc

if [ -z ${DOTUPDATE+x} ];then
  tada "dot.minatrix installed successfully!"

  if ! [ "$QUIET" = "1" ];then
    if [ -f $AFTERINSTALL ]; then
      echo ''
      echo "$(<$AFTERINSTALL)"
    fi
  fi
else
  tada "dot.minatrix updated successfully!"
fi

if [ -f "$AFTERINSTALL" ];then
  rm $AFTERINSTALL
fi
unset AFTERINSTALL VERBOSE QUIET
